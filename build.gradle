plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
}

repositories {
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        url "https://maven.terraformersmc.com/releases"
    }
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = "${project.archives_base_name}+${project.minecraft_version}"
}

loom {
}

minecraft {
	
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
    modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

    include fabricApi.module("fabric-api-base", project.fabric_version)
    include fabricApi.module("fabric-resource-loader-v0", project.fabric_version)
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset = "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
               "minecraft_version": project.minecraft_version,
               "loader_version": project.loader_version
    }
}

def targetJavaVersion = 8
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJavaVersion)
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
}
